public class Graph {
    public static void addEdge(ArrayList<ArrayList<Integer>> adj, int u, int v){
        adj.get(u).add(v);
        adj.get(v).add(u);
    }

    public static boolean DFSRec(ArrayList<ArrayList<Integer>> adj, int s, boolean[] visited, int parent){
        visited[s] = true;

        for(int x : adj.get(s)){
            if(visited[x] == false)
                if(DFSRec(adj, x, visited, s) == true)
                    return true;
                else if(x != parent)
                    return true;
        }
        return false;
    }

    public static boolean DFS(ArrayList<ArrayList<Integer>> adj, int V){
        boolean[] visited = new boolean[V];

        for(int i = 0; i<V; i++)
            visited[i] = false;

        for(int i = 0; i<V; i++){
            if(visited[i] == false){
                if(DFSRec(adj, i, visited, -1) == true)
                    return true;
            }
        }
        return false;
    }
}
