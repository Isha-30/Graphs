public class Graph {
    public static void addEdge(ArrayList<ArrayList<Integer>> adj, int u, int v){
        adj.get(u).add(v);
    }

    public static void DFS(ArrayList<ArrayList<Integer>> adj, int u, Stack st, boolean[] visited){
        visited[u] = true;
        for(int x : adj.get(u)){
            if(visited[x] == false)
                DFS(adj, x, st, visited);
        }
        st.push(new Integer(u));
    }

    public static void topologicalSort(ArrayList<ArrayList<Integer>> adj, int V){
        boolean[] visited = new boolean[V];

        for(int i = 0; i<V; i++) {
            visited[i] = false;
        }
        Stack<Integer> st = new Stack<>();
        for(int i = 0; i<V; i++){
            if(visited[i] == false){
                DFS(adj, i, st, visited);
            }
        }
        while(!st.empty())
            System.out.print(st.pop() + " ");
    }
}
