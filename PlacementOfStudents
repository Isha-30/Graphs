public class Solution 
{
	public static int maxMatch(int[][] mat) 
    {
		int students = mat.length;
        int jobs = mat[0].length;
        int jobCount = 0;
        int[] assign = new int[jobs];
        for(int i = 0; i<jobs; i++)
            assign[i] = -1;
        
        for(int s = 0; s<students; s++){
            boolean[] visited = new boolean[jobs];
            
            if(bipartite(s, assign, visited, mat, jobs))
                jobCount++;
        }
        
        return jobCount;
	}
    
    public static boolean bipartite(int s, int[] assign, boolean[] visited, int[][] mat, int jobs){
        for(int j = 0; j<jobs; j++){
            if(mat[s][j] == 1 && visited[j]== false){
                visited[j] = true;
                
                if(assign[j] < 0 || bipartite(assign[j], assign, visited, mat, jobs)){
                    assign[j] = s;
                    return true;
                }
            }
        }
        return false;
    }
}
